{"version":3,"sources":["components/LaunchItems.tsx","components/Launches.tsx","App.tsx","keys/vars.ts","index.tsx"],"names":["LaunchItem","props","_props$launchData","launchData","flight_number","launch_date_local","mission_name","react_default","a","createElement","className","LAUNCHES_QUERY","GQL_TAG","_templateObject","Launches","loadingMsg","loadedErrorMsg","react","react_apollo_esm","query","_ref","items","loading","error","data","console","log","concat","launches","map","item","LaunchItems","key","Component","ap_client","ApolloClient","uri","App","client","Launches_Launches","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"iPAkBeA,EAfI,SAACC,GAAc,IAAAC,EAE0BD,EAAME,WAAzDC,EAFyBF,EAEzBE,cAAeC,EAFUH,EAEVG,kBAAmBC,EAFTJ,EAESI,aAU1C,OAPCC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YAChBH,EAAAC,EAAAC,cAAA,cAAMH,EAAN,KACAC,EAAAC,EAAAC,cAAA,oBAAYJ,GACZE,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,kBAAUL,0NCL1B,IAAMO,QAAiBC,GAAHC,KAWCC,mLAGnB,IAAMC,EAAaR,EAAAC,EAAAC,cAAA,+BACbO,EAAiBT,EAAAC,EAAAC,cAAA,mDAevB,OACCF,EAAAC,EAAAC,cAACQ,EAAA,SAAD,KACCV,EAAAC,EAAAC,cAAA,iCAEAF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAOC,MAAOR,GAEZ,SAAAS,GAA6B,IAnBbC,EAmBbC,EAA0BF,EAA1BE,QAASC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,KAClB,OAAIF,EACIP,EAGJQ,GACHE,QAAQC,IAAR,yBAAAC,OAAqCJ,IAC9BP,IA1BOK,EA8BGG,EAAKI,SA7B3BrB,EAAAC,EAAAC,cAACQ,EAAA,SAAD,KACCV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEbW,EAAMQ,IAAK,SAACC,GACX,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,CAAYC,IAAOF,EAAK1B,cAAeD,WAAc2B,mBAX7BG,aCVhCC,EAAY,IAAIC,IAAa,CAElCC,ICR6B,0DD8BfC,mLAZb,OACC9B,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAgBoB,OAAQJ,GACvB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAC8B,EAAD,mBANaC,IAAMP,WEbxBQ,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAAQC,SAASC,eAAe","file":"static/js/main.9d8f26d8.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst LaunchItem = (props:any) => {\n\n\tconst { flight_number, launch_date_local, mission_name } = props.launchData;\n\n\tconst portion = (\n\t\t<div className = 'col-md-6'>\n\t\t\t<h1> {mission_name} </h1>\n\t\t\t<p> Date : {launch_date_local}</p>\n\t\t\t<p> Flight : <strong> {flight_number}</strong></p>\n\t\t</div>\t\n\t)\n\n\treturn portion\n}\n\nexport default LaunchItem","import React, { Component, Fragment } from 'react';\nimport GQL_TAG from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItems';\n\n\nconst LAUNCHES_QUERY = GQL_TAG`\n\tquery LaunchesQuery {\n\t\tlaunches {\n\t\t\tflight_number\n\t\t\tmission_name\n\t\t\tlaunch_date_local\n\t\t\tlaunch_success\n\t\t}\n\t}\n`;\n\nexport default class Launches extends Component {\n\trender(){\n\n\t\tconst loadingMsg = <p> Loading Data ... </p>\n\t\tconst loadedErrorMsg = <p> Loading Failed. Check browser console</p>\n\n\t\tconst loadedData = (items : any) => (\n\t\t\t<Fragment>\n\t\t\t\t<div className='row mt-32'>\n\t\t\t\t\t{\n\t\t\t\t\t\titems.map( (item:any)  => {\n\t\t\t\t\t\t\treturn <LaunchItem key = {item.flight_number} launchData = {item} />\n\t\t\t\t\t\t})\t\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t</Fragment>\n\t\t)\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h3> Launches Component</h3>\n\n\t\t\t\t<Query query={LAUNCHES_QUERY}>\n\t\t\t\t\t{\n\t\t\t\t\t\t({ loading, error, data}) => {\n\t\t\t\t\t\t\tif (loading){\n\t\t\t\t\t\t\t\treturn loadingMsg\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tconsole.log(`Launches Query Error: ${error}`)\n\t\t\t\t\t\t\t\treturn loadedErrorMsg\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// console.log(`Launches Query Data : ${JSON.stringify(data, null, 4)}`)\n\t\t\t\t\t\t\treturn loadedData(data.launches)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t</Query>\n\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n","import React from \"react\";\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo';\nimport {LHOST_GQL_URL, HEROKU_GQL_URL} from './keys/vars'\nimport Launches from './components/Launches';\n\n\nconst ap_client = new ApolloClient({\n\t// uri : LHOST_GQL_URL,\n\turi : HEROKU_GQL_URL\n})\n\n\nexport interface Props{}\ninterface State{}\n\n\nclass App extends React.Component<Props, State> {\n\trender() {\n\t\treturn (\n\t\t\t<ApolloProvider client={ap_client}>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<h1> React Express Graphql (TS) Travis App</h1>\n\t\t\t\t\t<Launches> </Launches>\n\t\t\t\t</div>\n\t\t\t</ApolloProvider>\n\n\t\t);\n\t}\n}\n\nexport default App;\n","export const LHOST_GQL_URL\t= \"http://localhost:4000/graphql\"\nexport const HEROKU_GQL_URL\t= \"https://expts-grph-react-travis.herokuapp.com/graphql\"\t ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}